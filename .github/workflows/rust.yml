name: Rust

permissions:
  contents: read

on:
  push:
    branches: [main]
    paths:
      - '**/*.rs'
      - Cargo.toml
      - .github/workflows/rust.yml
    tags:
      - 'v*'
  pull_request:
    branches: [main]
    paths:
      - '**/*.rs'
      - Cargo.toml
      - .github/workflows/rust.yml

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Setup Rust
        run: rustup update --no-self-update
      - name: Install cargo-binstall
        uses: cargo-bins/cargo-binstall@afcf9780305558bcc9e4bc94b7589ab2bb8b6106 # v1.15.9
      - name: Install cargo-llvm-cov, cargo-nextest, and nur
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: cargo binstall -y cargo-nextest cargo-llvm-cov nur
      - name: Cache deps
        uses: actions/cache@v4  # zizmor: ignore[cache-poisoning]
        with:
          path: ~/.cargo
          key: cargo-lib-${{ hashFiles('src/**', 'Cargo.toml') }}
      - run: rustup component add llvm-tools-preview
        # this enables a tool (for default toolchain) needed to measure code coverage.
      - name: run docs examples
        run: nur test docs
      - name: Run tests
        run: nur test --profile ci
      - name: Generate coverage reports
        run: nur test lcov
      - uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info
          fail_ci_if_error: true

  deploy:
    needs: [test]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Setup Rust
        run: rustup update --no-self-update
      - name: Establish trusted publishing token
        uses: rust-lang/crates-io-auth-action@041cce5b4b821e6b0ebc9c9c38b58cac4e34dcc2 # v1.0.2
        id: auth
      - name: Publish to crates.io
        env:
          CARGO_REGISTRY_TOKEN: ${{ steps.auth.outputs.token }}
        run: cargo publish
